apply plugin: 'java-library'

version = '0.2.2'

tasks.withType(JavaCompile) {
	sourceCompatibility = 11
	targetCompatibility = 11
	options.compilerArgs << '-Xlint:all'
}

repositories {
	jcenter()
}

dependencies {
	compile fileTree(dir: 'lib',
		includes: ['**/*.jar'],
		excludes: ['**/*-sources.jar', '**/*-javadoc.jar'])

	implementation 'org.apache.pdfbox:pdfbox:2.0.17'
	implementation 'org.apache.pdfbox:fontbox:2.0.17'
}

sourceSets.main.resources {
	srcDirs = ['src/main/resources', 'src/main/java']
}

defaultTasks 'clean', 'build'


def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }
tasks.withType(GroovyCompile).each { it.groovyOptions.encoding = defaultEncoding }

javadoc {
	options.charSet = 'UTF-8'
	options.encoding = 'UTF-8'
	options.stylesheetFile = new File(rootDir, 'javadoc.css')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	setGroup('build')
	setDescription('Generates Javadoc API documentation as a jar archive.')
	archiveClassifier = 'javadoc'
	from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
	setGroup('build')
	setDescription('Assembles a jar archive containing the main source code.')
	archiveClassifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar
	archives javadocJar
}
